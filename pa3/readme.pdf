Names : Jesse Strivelli, Ann Helina

Description: 
	So we have several different structs in this case. We can start with the record struct and this struct accounts for the filename or pathway and the occurence
	everytime we want to update the records this will be O(1). It is constant because there is only 1 file that is being updated and it is in tune with the word that we are currently looking at. Everytime we want to insert a new word it should be in O(n) time in the worst case and O(1) in the best because we need to look at where we are in the list and fiure out if it is the right place for it. This can be at the end of the list if it is our smallest piece of data. This is the same analysis i have for the sorted-list.c program that I wrote myself. Another item we need to account for is the traversal of the directories. If we have M files and N words, our worst case scenerio for insertion is O(N*M) because we need to account for the insertion every word and insert each words record or filepath as well. The structures overall layout consists of a SortedList that contains nodes which have Tokens or the "Word" and it has a sortedList of nodes that contain records. This is why the update for a sortedlist of records is in constant time.